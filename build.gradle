/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.0.0'
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

group = 'com.techsophy.tsf'
version = '1.2.0'
description = 'tp-app-workflow'

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://nexus.techsophy.com/nexus/repository/maven-public/')
        allowInsecureProtocol = true
        credentials {
            username=System.getenv('nexusUser')
            password=System.getenv('nexusPassword')
        }
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    mavenCentral()
}

jib {
    container {
        jvmFlags = [
                '-Dotel.exporter=jaeger',
                '-Dotel.exporter.jaeger.endpoint=http://jaeger:14250',
                '-Dotel.exporter.jaeger.service.name=workflow-app',
                '-Dapplication.name=workflow-app',
                '-javaagent:/opentelemetry-javaagent-all.jar'
        ]
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server:5.6.3'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.6.3'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.8'
    implementation 'org.springframework.security:spring-security-test:5.6.3'

    implementation 'io.github.origin-energy:java-snapshot-testing-junit5:3.2.7'

    implementation 'com.techsophy:id-generator:1.0.0@jar'
    implementation 'com.techsophy:multitenancy-mongo:1.0.0@jar'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.2'
    implementation 'org.springframework.cloud:spring-cloud-dependencies:2021.0.2'
    implementation 'org.springframework:spring-aspects:5.3.20'
    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.2.RELEASE'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
jar {
    enabled = false
}
